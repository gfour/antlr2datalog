#include "schema.dl"
#include "base-logic.dl"
#include "areas.dl"

.decl SolidityFunction(fd: Id, name: symbol, location: Loc)
.output SolidityFunction

SolidityFunction(fd, name, LOCATION(path, line, pos)) :-
  db_SOLIDITY.FunctionDefinition_functionDescriptor(fd, fdesc),
  db_SOLIDITY.FunctionDescriptor_identifier(fdesc, ident),
  db_SOLIDITY.Identifier_Identifier(ident, terminal),
  BASE_Terminal(terminal, name, line, _, _, pos),
  ID_PATH(fd, path).

// Function definitions have implementation blocks.
BASE_FunctionDefinition(fd, name, location) :-
  SolidityFunction(fd, name, location),
  db_SOLIDITY.FunctionDefinition_block(fd, _).
// Function declarations do not have implementation blocks.
BASE_FunctionDeclaration(fd, name, location) :-
  SolidityFunction(fd, name, location),
  !db_SOLIDITY.FunctionDefinition_block(fd, _).

BASE_isScope(id) :- db_SOLIDITY.isBlock(id).

BASE_StringConstant(str, LOCATION(path, line, pos)) :-
  db_SOLIDITY.StringLiteral_StringLiteralFragment(_, terminal, _),
  BASE_Terminal(terminal, str, line, _, _, pos),
  ID_PATH(terminal, path).

// Enum/struct definitions.
BASE_Type(ed, name, LOCATION(path, line, pos)) :-
  ( db_SOLIDITY.EnumDefinition_identifier(ed, ident)
  ; db_SOLIDITY.StructDefinition_identifier(ed, ident)),
  db_SOLIDITY.Identifier_Identifier(ident, terminal),
  BASE_Terminal(terminal, name, line, _, _, pos),
  ID_PATH(ed, path).

// Contract definitions.
BASE_Type(cd, name, LOCATION(path, line, pos)) :-
  db_SOLIDITY.ContractDefinition_identifier(cd, ident),
  db_SOLIDITY.Identifier_Identifier(ident, terminal),
  BASE_Terminal(terminal, name, line, _, _, pos),
  ID_PATH(cd, path).

BASE_FunctionParameter(fd, ident, v, idx, LOCATION(path, line, pos)) :-
  SolidityFunction(fd, _, _),
  db_SOLIDITY.FunctionDefinition_parameterList(fd, pl),
  db_SOLIDITY.ParameterList_parameter(pl, param, idx),
  db_SOLIDITY.Parameter_identifier(param, ident),
  db_SOLIDITY.Identifier_Identifier(ident, terminal),
  BASE_Terminal(terminal, v, line, _, _, pos),
  ID_PATH(fd, path).

.decl Function_ModList(fd: db_SOLIDITY.FunctionDefinition, ml: db_SOLIDITY.ModifierList)
.output Function_ModList

Function_ModList(fd, ml) :-
  SolidityFunction(fd, _, _),
  db_SOLIDITY.FunctionDefinition_modifierList(fd, ml).

BASE_Modifier(fd, "external") :-
  Function_ModList(fd, ml), db_SOLIDITY.ModifierList_ExternalKeyword(ml, _, _).
BASE_Modifier(fd, "internal") :-
  Function_ModList(fd, ml), db_SOLIDITY.ModifierList_InternalKeyword(ml, _, _).
BASE_Modifier(fd, "private") :-
  Function_ModList(fd, ml), db_SOLIDITY.ModifierList_PrivateKeyword(ml, _, _).
BASE_Modifier(fd, "public") :-
  Function_ModList(fd, ml), db_SOLIDITY.ModifierList_PublicKeyword(ml, _, _).
BASE_Modifier(fd, "virtual") :-
  Function_ModList(fd, ml), db_SOLIDITY.ModifierList_VirtualKeyword(ml, _, _).
